# language_detector.py
# Developer: G A RAZA
# Advanced language detection and localization

import re
from langdetect import detect, DetectorFactory
from typing import Dict, Optional

# Set seed for consistent results
DetectorFactory.seed = 0

class LanguageDetector:
    def __init__(self):
        self.language_patterns = {
            'hi': re.compile(r'[\u0900-\u097F]'),  # Devanagari
            'ur': re.compile(r'[\u0600-\u06FF]'),  # Arabic/Urdu
            'ar': re.compile(r'[\u0600-\u06FF]'),  # Arabic
            'bn': re.compile(r'[\u0980-\u09FF]'),  # Bengali
            'ta': re.compile(r'[\u0B80-\u0BFF]'),  # Tamil
            'te': re.compile(r'[\u0C00-\u0C7F]'),  # Telugu
        }
        
        self.language_names = {
            'en': 'English',
            'hi': 'рд╣рд┐рдВрджреА',
            'ur': '╪з╪▒╪п┘И',
            'ar': '╪з┘Д╪╣╪▒╪и┘К╪й',
            'bn': 'ржмрж╛ржВрж▓рж╛',
            'ta': 'родрооро┐ро┤рпН',
            'te': 'р░др▒Жр░▓р▒Бр░Чр▒Б',
            'es': 'Espa├▒ol',
            'fr': 'Fran├зais',
            'de': 'Deutsch',
            'it': 'Italiano',
            'pt': 'Portugu├кs',
            'ru': '╨а╤Г╤Б╤Б╨║╨╕╨╣',
            'ja': 'цЧецЬмшкЮ',
            'ko': 'эХЬъ╡ньЦ┤',
            'zh': 'ф╕нцЦЗ'
        }
    
    def detect_language(self, text: str) -> str:
        """Detect language of the input text"""
        if not text or len(text.strip()) < 3:
            return 'en'
        
        try:
            # First check for script patterns
            for lang, pattern in self.language_patterns.items():
                if pattern.search(text):
                    return lang
            
            # Use langdetect for other languages
            detected = detect(text)
            return detected if detected in self.language_names else 'en'
            
        except Exception:
            return 'en'
    
    def get_language_name(self, lang_code: str) -> str:
        """Get language name in its native script"""
        return self.language_names.get(lang_code, 'English')
    
    def get_welcome_message(self, lang_code: str) -> Dict[str, str]:
        """Get welcome message in detected language"""
        messages = {
            'en': {
                'welcome': "ЁЯМЯ Welcome to Premium AI Assistant!\n\nI'm your intelligent companion, ready to help you with anything. Just send me a message and I'll respond in your language!",
                'features': "тЬи What I can do:\nтАв Answer questions in any language\nтАв Help with writing and creativity\nтАв Solve problems and explain concepts\nтАв Have natural conversations\nтАв Remember our chat context",
                'start_chat': "ЁЯТм Start chatting with me now!"
            },
            'hi': {
                'welcome': "ЁЯМЯ рдкреНрд░реАрдорд┐рдпрдо AI рдЕрд╕рд┐рд╕реНрдЯреЗрдВрдЯ рдореЗрдВ рдЖрдкрдХрд╛ рд╕реНрд╡рд╛рдЧрдд рд╣реИ!\n\nрдореИрдВ рдЖрдкрдХрд╛ рдмреБрджреНрдзрд┐рдорд╛рди рд╕рд╛рдереА рд╣реВрдВ, рдЖрдкрдХреА рдХрд┐рд╕реА рднреА рдорджрдж рдХреЗ рд▓рд┐рдП рддреИрдпрд╛рд░ рд╣реВрдВред рдмрд╕ рдореБрдЭреЗ рдПрдХ рд╕рдВрджреЗрд╢ рднреЗрдЬреЗрдВ рдФрд░ рдореИрдВ рдЖрдкрдХреА рднрд╛рд╖рд╛ рдореЗрдВ рдЬрд╡рд╛рдм рджреВрдВрдЧрд╛!",
                'features': "тЬи рдореИрдВ рдХреНрдпрд╛ рдХрд░ рд╕рдХрддрд╛ рд╣реВрдВ:\nтАв рдХрд┐рд╕реА рднреА рднрд╛рд╖рд╛ рдореЗрдВ рд╕рд╡рд╛рд▓реЛрдВ рдХреЗ рдЬрд╡рд╛рдм\nтАв рд▓реЗрдЦрди рдФрд░ рд░рдЪрдирд╛рддреНрдордХрддрд╛ рдореЗрдВ рдорджрдж\nтАв рд╕рдорд╕реНрдпрд╛рдУрдВ рдХрд╛ рд╕рдорд╛рдзрд╛рди рдФрд░ рдЕрд╡рдзрд╛рд░рдгрд╛рдУрдВ рдХреА рд╡реНрдпрд╛рдЦреНрдпрд╛\nтАв рдкреНрд░рд╛рдХреГрддрд┐рдХ рдмрд╛рддрдЪреАрдд\nтАв рд╣рдорд╛рд░реА рдЪреИрдЯ рдХрд╛ рд╕рдВрджрд░реНрдн рдпрд╛рдж рд░рдЦрдирд╛",
                'start_chat': "ЁЯТм рдЕрдм рдореБрдЭрд╕реЗ рдмрд╛рдд рдХрд░рдирд╛ рд╢реБрд░реВ рдХрд░реЗрдВ!"
            },
            'ur': {
                'welcome': "ЁЯМЯ ┘╛╪▒█М┘Е█М┘Е AI ╪з╪│╪│┘╣┘Ж┘╣ ┘Е█М┌║ ╪о┘И╪┤ ╪в┘Е╪п█М╪п!\n\n┘Е█М┌║ ╪в┘╛ ┌й╪з ╪░█Б█М┘Ж ╪│╪з╪к┌╛█М █Б┘И┌║╪М ╪в┘╛ ┌й█М █Б╪▒ ┘Е╪п╪п ┌й█Т ┘Д█М█Т ╪к█М╪з╪▒ █Б┘И┌║█Ф ╪и╪│ ┘Е╪м┌╛█Т ╪з█М┌й ┘╛█М╪║╪з┘Е ╪и┌╛█М╪м█М┌║ ╪з┘И╪▒ ┘Е█М┌║ ╪в┘╛ ┌й█М ╪▓╪и╪з┘Ж ┘Е█М┌║ ╪м┘И╪з╪и ╪п┘И┌║ ┌п╪з!",
                'features': "тЬи ┘Е█М┌║ ┌й█М╪з ┌й╪▒ ╪│┌й╪к╪з █Б┘И┌║:\nтАв ┌й╪│█М ╪и┌╛█М ╪▓╪и╪з┘Ж ┘Е█М┌║ ╪│┘И╪з┘Д╪з╪к ┌й█Т ╪м┘И╪з╪и╪з╪к\nтАв ╪к╪н╪▒█М╪▒ ╪з┘И╪▒ ╪к╪о┘Д█М┘В█М ┌й╪з┘Е ┘Е█М┌║ ┘Е╪п╪п\nтАв ┘Е╪│╪з╪ж┘Д ┌й╪з ╪н┘Д ╪з┘И╪▒ ╪к╪╡┘И╪▒╪з╪к ┌й█М ┘И╪╢╪з╪н╪к\nтАв ┘Б╪╖╪▒█М ┌п┘Б╪к┌п┘И\nтАв █Б┘Е╪з╪▒█М ┌Ж█М┘╣ ┌й╪з ╪│█М╪з┘В █М╪з╪п ╪▒┌й┌╛┘Ж╪з",
                'start_chat': "ЁЯТм ╪з╪и ┘Е╪м┌╛ ╪│█Т ╪и╪з╪к ┌й╪▒┘Ж╪з ╪┤╪▒┘И╪╣ ┌й╪▒█М┌║!"
            },
            'ar': {
                'welcome': "ЁЯМЯ ┘Е╪▒╪н╪и╪з┘Л ╪и┘Г ┘Б┘К ╪з┘Д┘Е╪│╪з╪╣╪п ╪з┘Д╪░┘Г┘К ╪з┘Д┘Е╪к┘В╪п┘Е!\n\n╪г┘Ж╪з ╪▒┘Б┘К┘В┘Г ╪з┘Д╪░┘Г┘К╪М ┘Е╪│╪к╪╣╪п ┘Д┘Е╪│╪з╪╣╪п╪к┘Г ┘Б┘К ╪г┘К ╪┤┘К╪б. ┘Б┘В╪╖ ╪г╪▒╪│┘Д ┘Д┘К ╪▒╪│╪з┘Д╪й ┘И╪│╪г╪▒╪п ╪и┘Д╪║╪к┘Г!",
                'features': "тЬи ┘Е╪з ┘К┘Е┘Г┘Ж┘Ж┘К ┘Б╪╣┘Д┘З:\nтАв ╪з┘Д╪е╪м╪з╪и╪й ╪╣┘Д┘Й ╪з┘Д╪г╪│╪ж┘Д╪й ╪и╪г┘К ┘Д╪║╪й\nтАв ╪з┘Д┘Е╪│╪з╪╣╪п╪й ┘Б┘К ╪з┘Д┘Г╪к╪з╪и╪й ┘И╪з┘Д╪е╪и╪п╪з╪╣\nтАв ╪н┘Д ╪з┘Д┘Е╪┤╪з┘Г┘Д ┘И╪┤╪▒╪н ╪з┘Д┘Е┘Б╪з┘З┘К┘Е\nтАв ╪е╪м╪▒╪з╪б ┘Е╪н╪з╪п╪л╪з╪к ╪╖╪и┘К╪╣┘К╪й\nтАв ╪к╪░┘Г╪▒ ╪│┘К╪з┘В ┘Е╪н╪з╪п╪л╪к┘Ж╪з",
                'start_chat': "ЁЯТм ╪з╪и╪п╪г ╪з┘Д┘Е╪н╪з╪п╪л╪й ┘Е╪╣┘К ╪з┘Д╪в┘Ж!"
            }
        }
        
        return messages.get(lang_code, messages['en'])