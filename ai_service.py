# ai_service.py
# Developer: Mr @Mrnick66
# Advanced AI service with Groq integration for USTAAD-AI

import asyncio
import logging
from typing import List, Dict, Optional
from groq import Groq
from config import Config

logger = logging.getLogger(__name__)

class AIService:
    def __init__(self):
        self.client = Groq(api_key=Config.GROQ_API_KEY)
        self.conversation_history = {}
        
    async def get_ai_response(self, user_id: int, message: str, language: str = "auto") -> str:
        """Get AI response with conversation context"""
        try:
            # Check for identity questions first
            identity_response = self._check_identity_questions(message, language)
            if identity_response:
                return identity_response
            
            # Get or create conversation history
            if user_id not in self.conversation_history:
                self.conversation_history[user_id] = []
            
            # Add user message to history
            self.conversation_history[user_id].append({
                "role": "user",
                "content": message
            })
            
            # Keep only last 10 messages to manage token usage
            if len(self.conversation_history[user_id]) > 20:
                self.conversation_history[user_id] = self.conversation_history[user_id][-20:]
            
            # Create system prompt based on language
            system_prompt = self._get_system_prompt(language)
            
            # Prepare messages for API
            messages = [{"role": "system", "content": system_prompt}]
            messages.extend(self.conversation_history[user_id])
            
            # Get response from Groq
            response = await asyncio.to_thread(
                self.client.chat.completions.create,
                model=Config.DEFAULT_MODEL,
                messages=messages,
                max_tokens=Config.MAX_TOKENS,
                temperature=Config.TEMPERATURE,
                stream=False
            )
            
            ai_response = response.choices[0].message.content
            
            # Add AI response to history
            self.conversation_history[user_id].append({
                "role": "assistant",
                "content": ai_response
            })
            
            return ai_response
            
        except Exception as e:
            logger.error(f"AI Service Error: {e}")
            return self._get_error_message(language)
    
    def _check_identity_questions(self, message: str, language: str) -> Optional[str]:
        """Check if user is asking about bot identity and respond accordingly"""
        message_lower = message.lower()
        
        # Name questions
        name_keywords = {
            'en': ['what is your name', 'your name', 'who are you', 'what are you called'],
            'hi': ['рддреБрдореНрд╣рд╛рд░рд╛ рдирд╛рдо рдХреНрдпрд╛ рд╣реИ', 'рдЖрдкрдХрд╛ рдирд╛рдо', 'рддреБрдо рдХреМрди рд╣реЛ', 'рдЖрдк рдХреМрди рд╣реИрдВ'],
            'ur': ['╪в┘╛ ┌й╪з ┘Ж╪з┘Е ┌й█М╪з █Б█Т', '╪к┘Е█Б╪з╪▒╪з ┘Ж╪з┘Е', '╪в┘╛ ┌й┘И┘Ж █Б█М┌║', '╪к┘Е ┌й┘И┘Ж █Б┘И'],
            'bn': ['рждрзЛржорж╛рж░ ржирж╛ржо ржХрж┐', 'ржЖржкржирж╛рж░ ржирж╛ржо', 'рждрзБржорж┐ ржХрзЗ', 'ржЖржкржирж┐ ржХрзЗ'],
            'mr': ['рддреБрдЭреЗ рдирд╛рд╡ рдХрд╛рдп', 'рддреБрдордЪреЗ рдирд╛рд╡', 'рддреВ рдХреЛрдг рдЖрд╣реЗрд╕', 'рддреБрдореНрд╣реА рдХреЛрдг рдЖрд╣рд╛рдд'],
            'te': ['р░ир▒А р░кр▒Зр░░р▒Б р░Пр░ор░┐р░Яр░┐', 'р░ор▒А р░кр▒Зр░░р▒Б', 'р░ир▒Бр░╡р▒Нр░╡р▒Б р░Ор░╡р░░р▒Б', 'р░ор▒Ар░░р▒Б р░Ор░╡р░░р▒Б'],
            'ta': ['роЙройрпН рокрпЖропро░рпН роОройрпНрой', 'роЙроЩрпНроХро│рпН рокрпЖропро░рпН', 'роирпА ропро╛ро░рпН', 'роирпАроЩрпНроХро│рпН ропро╛ро░рпН'],
            'gu': ['ркдрк╛рк░рлБркВ ркирк╛рко рк╢рлБркВ ркЫрлЗ', 'ркдркорк╛рк░рлБркВ ркирк╛рко', 'ркдрлБркВ ркХрлЛркг ркЫрлЗ', 'ркдркорлЗ ркХрлЛркг ркЫрлЛ'],
            'kn': ['р▓ир▓┐р▓ир│Нр▓и р▓╣р│Жр▓╕р▓░р│Б р▓Пр▓ир│Б', 'р▓ир▓┐р▓ор│Нр▓о р▓╣р│Жр▓╕р▓░р│Б', 'р▓ир│Ар▓ир│Б р▓пр▓╛р▓░р│Б', 'р▓ир│Ар▓╡р│Б р▓пр▓╛р▓░р│Б'],
            'or': ['рмдрнЛрм░ рмирм╛рмо рмХрмг', 'рмЖрмкрмгрмЩрнНрмХ рмирм╛рмо', 'рмдрнБ рмХрм┐рмП', 'рмЖрмкрмг рмХрм┐рмП'],
            'pa': ['ридрйЗри░ри╛ риири╛рио риХрйА ри╣рйИ', 'ридрйБри╣ри╛рибри╛ риири╛рио', 'ридрйВрй░ риХрйМриг ри╣рйИриВ', 'ридрйБри╕рйАриВ риХрйМриг ри╣рйЛ']
        }
        
        # Developer questions
        developer_keywords = {
            'en': ['who made you', 'who created you', 'your developer', 'who built you', 'your creator', 'who is your boss'],
            'hi': ['рддреБрдореНрд╣реЗрдВ рдХрд┐рд╕рдиреЗ рдмрдирд╛рдпрд╛', 'рддреБрдореНрд╣рд╛рд░рд╛ рдбреЗрд╡рд▓рдкрд░', 'рддреБрдореНрд╣рд╛рд░рд╛ рдирд┐рд░реНрдорд╛рддрд╛', 'рддреБрдореНрд╣рд╛рд░рд╛ рдмреЙрд╕ рдХреМрди рд╣реИ'],
            'ur': ['╪к┘Е█Б█М┌║ ┌й╪│ ┘Ж█Т ╪и┘Ж╪з█М╪з', '╪к┘Е█Б╪з╪▒╪з ┌И█М┘И┘Д┘╛╪▒', '╪к┘Е█Б╪з╪▒╪з ╪и┘Ж╪з┘Ж█Т ┘И╪з┘Д╪з', '╪к┘Е█Б╪з╪▒╪з ╪и╪з╪│ ┌й┘И┘Ж █Б█Т'],
            'bn': ['рждрзЛржорж╛ржХрзЗ ржХрзЗ ржмрж╛ржирж┐ржпрж╝рзЗржЫрзЗ', 'рждрзЛржорж╛рж░ ржбрзЗржнрзЗрж▓ржкрж╛рж░', 'рждрзЛржорж╛рж░ ржирж┐рж░рзНржорж╛рждрж╛', 'рждрзЛржорж╛рж░ ржмрж╕ ржХрзЗ'],
            'mr': ['рддреБрд▓рд╛ рдХреЛрдгреА рдмрдирд╡рд▓реЗ', 'рддреБрдЭрд╛ рдбреЗрд╡реНрд╣рд▓рдкрд░', 'рддреБрдЭрд╛ рдирд┐рд░реНрдорд╛рддрд╛', 'рддреБрдЭрд╛ рдмреЙрд╕ рдХреЛрдг'],
            'te': ['р░ир░┐р░ир▒Нр░ир▒Б р░Ор░╡р░░р▒Б р░др░пр░╛р░░р▒Б р░Ър▒Зр░╢р░╛р░░р▒Б', 'р░ир▒А р░бр▒Жр░╡р░▓р░кр░░р▒Н', 'р░ир▒А р░╕р▒Гр░╖р▒Нр░Яр░┐р░Хр░░р▒Нр░д', 'р░ир▒А р░мр░╛р░╕р▒Н р░Ор░╡р░░р▒Б'],
            'ta': ['роЙройрпНройрпИ ропро╛ро░рпН роЙро░рпБро╡ро╛роХрпНроХро┐ройро╛ро░рпНроХро│рпН', 'роЙройрпН роЯрпЖро╡ро▓рокрпНрокро░рпН', 'роЙройрпН рокроЯрпИрокрпНрокро╛ро│ро┐', 'роЙройрпН рокро╛ро╕рпН ропро╛ро░рпН'],
            'gu': ['ркдркирлЗ ркХрлЛркгрлЗ ркмркирк╛рк╡рлНркпрлЛ', 'ркдрк╛рк░рлЛ ркбрлЗрк╡рк▓рккрк░', 'ркдрк╛рк░рлЛ ркирк┐рк░рлНркорк╛ркдрк╛', 'ркдрк╛рк░рлЛ ркмрлЛрк╕ ркХрлЛркг'],
            'kn': ['р▓ир▓┐р▓ир│Нр▓ир▓ир│Нр▓ир│Б р▓пр▓╛р▓░р│Б р▓ор▓╛р▓бр▓┐р▓жр▓░р│Б', 'р▓ир▓┐р▓ир│Нр▓и р▓бр│Жр▓╡р▓▓р▓кр▓░р│Н', 'р▓ир▓┐р▓ир│Нр▓и р▓╕р│Гр▓╖р│Нр▓Яр▓┐р▓Хр▓░р│Нр▓д', 'р▓ир▓┐р▓ир│Нр▓и р▓мр▓╛р▓╕р│Н р▓пр▓╛р▓░р│Б'],
            'or': ['рмдрнЛрмдрнЗ рмХрм┐рмП рмдрм┐рмЖрм░рм┐ рмХрм▓рм╛', 'рмдрнЛрм░ рмбрнЗрмнрнЗрм▓рмкрм░', 'рмдрнЛрм░ рмирм┐рм░рнНрморм╛рмдрм╛', 'рмдрнЛрм░ рммрм╕рнН рмХрм┐рмП'],
            'pa': ['ридрйИриирйВрй░ риХри┐ри╕риирйЗ римригри╛риЗриЖ', 'ридрйЗри░ри╛ рибри┐ри╡рйИри▓рикри░', 'ридрйЗри░ри╛ риири┐ри░риори╛ридри╛', 'ридрйЗри░ри╛ римри╛ри╕ риХрйМриг']
        }
        
        # Check for name questions
        for lang, keywords in name_keywords.items():
            if any(keyword in message_lower for keyword in keywords):
                return self._get_name_response(language)
        
        # Check for developer questions
        for lang, keywords in developer_keywords.items():
            if any(keyword in message_lower for keyword in keywords):
                return self._get_developer_response(language)
        
        return None
    
    def _get_name_response(self, language: str) -> str:
        """Get name response in appropriate language"""
        responses = {
            'hi': f"ЁЯОп рдореЗрд░рд╛ рдирд╛рдо **{Config.BOT_NAME}** рд╣реИ! ЁЯдЦ\n\nрдореИрдВ рдПрдХ рдПрдбрд╡рд╛рдВрд╕ AI рдЕрд╕рд┐рд╕реНрдЯреЗрдВрдЯ рд╣реВрдВ рдЬреЛ рдЖрдкрдХреА рд╣рд░ рдорджрдж рдХреЗ рд▓рд┐рдП рддреИрдпрд╛рд░ рд╣реИред ЁЯШКтЬи\n\n{Config.POWERED_BY} | {Config.VERSION}",
            'ur': f"ЁЯОп ┘Е█М╪▒╪з ┘Ж╪з┘Е **{Config.BOT_NAME}** █Б█Т! ЁЯдЦ\n\n┘Е█М┌║ ╪з█М┌й ╪з█М┌И┘И╪з┘Ж╪│ AI ╪з╪│╪│┘╣┘Ж┘╣ █Б┘И┌║ ╪м┘И ╪в┘╛ ┌й█М █Б╪▒ ┘Е╪п╪п ┌й█Т ┘Д█М█Т ╪к█М╪з╪▒ █Б┘И┌║█Ф ЁЯШКтЬи\n\n{Config.POWERED_BY} | {Config.VERSION}",
            'bn': f"ЁЯОп ржЖржорж╛рж░ ржирж╛ржо **{Config.BOT_NAME}**! ЁЯдЦ\n\nржЖржорж┐ ржПржХржЯрж┐ ржЙржирзНржиржд AI рж╕рж╣рж╛ржпрж╝ржХ ржпрж╛ ржЖржкржирж╛рж░ рж╕ржм ржзрж░ржирзЗрж░ рж╕рж╛рж╣рж╛ржпрзНржпрзЗрж░ ржЬржирзНржп ржкрзНрж░рж╕рзНрждрзБрждред ЁЯШКтЬи\n\n{Config.POWERED_BY} | {Config.VERSION}",
            'mr': f"ЁЯОп рдорд╛рдЭреЗ рдирд╛рд╡ **{Config.BOT_NAME}** рдЖрд╣реЗ! ЁЯдЦ\n\nрдореА рдПрдХ рдкреНрд░рдЧрдд AI рд╕рд╣рд╛рдпреНрдпрдХ рдЖрд╣реЗ рдЬреЛ рддреБрдордЪреНрдпрд╛ рд╕рд░реНрд╡ рдорджрддреАрд╕рд╛рдареА рддрдпрд╛рд░ рдЖрд╣реЗред ЁЯШКтЬи\n\n{Config.POWERED_BY} | {Config.VERSION}",
            'te': f"ЁЯОп р░ир░╛ р░кр▒Зр░░р▒Б **{Config.BOT_NAME}**! ЁЯдЦ\n\nр░ир▒Зр░ир▒Б р░ор▒А р░Ер░ир▒Нр░ир░┐ р░░р░Хр░╛р░▓ р░╕р░╣р░╛р░пр░╛р░ир░┐р░Хр░┐ р░╕р░┐р░жр▒Нр░зр░Вр░Чр░╛ р░Йр░ир▒Нр░и р░Ер░зр▒Бр░ир░╛р░др░и AI р░╕р░╣р░╛р░пр░Хр▒Бр░бр░┐р░ир░┐ред ЁЯШКтЬи\n\n{Config.POWERED_BY} | {Config.VERSION}",
            'ta': f"ЁЯОп роОройрпН рокрпЖропро░рпН **{Config.BOT_NAME}**! ЁЯдЦ\n\nроиро╛ройрпН роЙроЩрпНроХро│рпН роОро▓рпНро▓ро╛ ро╡роХрпИропро╛рой роЙродро╡ро┐роХро│рпБроХрпНроХрпБроорпН родропро╛ро░ро╛роХ роЗро░рпБроХрпНроХрпБроорпН роорпЗроорпНрокроЯрпНроЯ AI роЙродро╡ро┐ропро╛ро│ро░рпН. ЁЯШКтЬи\n\n{Config.POWERED_BY} | {Config.VERSION}",
            'gu': f"ЁЯОп ркорк╛рк░рлБркВ ркирк╛рко **{Config.BOT_NAME}** ркЫрлЗ! ЁЯдЦ\n\nрк╣рлБркВ ркПркХ ркЕркжрлНркпркдрки AI рк╕рк╣рк╛ркпркХ ркЫрлБркВ ркЬрлЗ ркдркорк╛рк░рлА ркжрк░рлЗркХ ркоркжркж ркорк╛ркЯрлЗ ркдрлИркпрк╛рк░ ркЫрлЗред ЁЯШКтЬи\n\n{Config.POWERED_BY} | {Config.VERSION}",
            'kn': f"ЁЯОп р▓ир▓ир│Нр▓и р▓╣р│Жр▓╕р▓░р│Б **{Config.BOT_NAME}**! ЁЯдЦ\n\nр▓ир▓╛р▓ир│Б р▓ир▓┐р▓ор│Нр▓о р▓Ор▓▓р│Нр▓▓р▓╛ р▓░р│Ар▓др▓┐р▓п р▓╕р▓╣р▓╛р▓пр▓Хр│Нр▓Хр▓╛р▓Чр▓┐ р▓╕р▓┐р▓жр│Нр▓зр▓╡р▓╛р▓Чр▓┐р▓░р│Бр▓╡ р▓╕р│Бр▓зр▓╛р▓░р▓┐р▓д AI р▓╕р▓╣р▓╛р▓пр▓Хред ЁЯШКтЬи\n\n{Config.POWERED_BY} | {Config.VERSION}",
            'or': f"ЁЯОп рморнЛрм░ рмирм╛рмо **{Config.BOT_NAME}**! ЁЯдЦ\n\nрморнБрмБ рмЖрмкрмгрмЩрнНрмХрм░ рм╕рморм╕рнНрмд рмкрнНрм░рмХрм╛рм░ рм╕рм╛рм╣рм╛рмпрнНрнЯ рмкрм╛рмЗрмБ рмкрнНрм░рм╕рнНрмдрнБрмд рмПрмХ рмЙрмирнНрмирмд AI рм╕рм╣рм╛рнЯрмХред ЁЯШКтЬи\n\n{Config.POWERED_BY} | {Config.VERSION}",
            'pa': f"ЁЯОп риорйЗри░ри╛ риири╛рио **{Config.BOT_NAME}** ри╣рйИ! ЁЯдЦ\n\nриорйИриВ ридрйБри╣ри╛рибрйА ри╣ри░ риХри┐ри╕рио рижрйА риорижриж ри▓риИ ридри┐риЖри░ риЗрй▒риХ риЙрй▒риирид AI ри╕ри╣ри╛риЗриХ ри╣ри╛риВред ЁЯШКтЬи\n\n{Config.POWERED_BY} | {Config.VERSION}",
            'default': f"ЁЯОп My name is **{Config.BOT_NAME}**! ЁЯдЦ\n\nI'm an advanced AI assistant ready to help you with anything. ЁЯШКтЬи\n\n{Config.POWERED_BY} | {Config.VERSION}"
        }
        return responses.get(language, responses['default'])
    
    def _get_developer_response(self, language: str) -> str:
        """Get developer response in appropriate language"""
        responses = {
            'hi': f"ЁЯСитАНЁЯТ╗ рдореБрдЭреЗ **{Config.DEVELOPER}** рдиреЗ рдмрдирд╛рдпрд╛ рд╣реИ! рд╡реЛ рдореЗрд░реЗ Boss рд╣реИрдВред ЁЯФе\n\nрдЙрдирдХрд╛ Telegram ID: @Mrnick66 ЁЯУ▒\n\nрд╡реЛ AI Development рдХреЗ expert рд╣реИрдВ рдФрд░ рдмрд╣реБрдд talented developer рд╣реИрдВ! ЁЯМЯ\n\n{Config.POWERED_BY} | {Config.VERSION} ЁЯЪА",
            'ur': f"ЁЯСитАНЁЯТ╗ ┘Е╪м┌╛█Т **{Config.DEVELOPER}** ┘Ж█Т ╪и┘Ж╪з█М╪з █Б█Т! ┘И█Б ┘Е█М╪▒█Т Boss █Б█М┌║█Ф ЁЯФе\n\n╪з┘Ж ┌й╪з Telegram ID: @Mrnick66 ЁЯУ▒\n\n┘И█Б AI Development ┌й█Т expert █Б█М┌║ ╪з┘И╪▒ ╪и█Б╪к talented developer █Б█М┌║! ЁЯМЯ\n\n{Config.POWERED_BY} | {Config.VERSION} ЁЯЪА",
            'bn': f"ЁЯСитАНЁЯТ╗ ржЖржорж╛ржХрзЗ **{Config.DEVELOPER}** рждрзИрж░рж┐ ржХрж░рзЗржЫрзЗржи! рждрж┐ржирж┐ ржЖржорж╛рж░ Bossред ЁЯФе\n\nрждрж╛рж░ Telegram ID: @Mrnick66 ЁЯУ▒\n\nрждрж┐ржирж┐ AI Development ржПрж░ expert ржПржмржВ ржЦрзБржмржЗ talented developer! ЁЯМЯ\n\n{Config.POWERED_BY} | {Config.VERSION} ЁЯЪА",
            'mr': f"ЁЯСитАНЁЯТ╗ рдорд▓рд╛ **{Config.DEVELOPER}** рдиреЗ рдмрдирд╡рд▓реЗ рдЖрд╣реЗ! рддреЗ рдорд╛рдЭреЗ Boss рдЖрд╣реЗрддред ЁЯФе\n\nрддреНрдпрд╛рдВрдЪрд╛ Telegram ID: @Mrnick66 ЁЯУ▒\n\nрддреЗ AI Development рдЪреЗ expert рдЖрд╣реЗрдд рдЖрдгрд┐ рдЦреВрдк talented developer рдЖрд╣реЗрдд! ЁЯМЯ\n\n{Config.POWERED_BY} | {Config.VERSION} ЁЯЪА",
            'te': f"ЁЯСитАНЁЯТ╗ р░ир░ир▒Нр░ир▒Б **{Config.DEVELOPER}** р░др░пр░╛р░░р▒Б р░Ър▒Зр░╢р░╛р░░р▒Б! р░Ер░др░ир▒Б р░ир░╛ Boss. ЁЯФе\n\nр░Ер░др░ир░┐ Telegram ID: @Mrnick66 ЁЯУ▒\n\nр░Ер░др░ир▒Б AI Development р░▓р▒Л expert р░ор░░р░┐р░пр▒Б р░Ър░╛р░▓р░╛ talented developer! ЁЯМЯ\n\n{Config.POWERED_BY} | {Config.VERSION} ЁЯЪА",
            'ta': f"ЁЯСитАНЁЯТ╗ роОройрпНройрпИ **{Config.DEVELOPER}** роЙро░рпБро╡ро╛роХрпНроХро┐ройро╛ро░рпН! роЕро╡ро░рпН роОройрпН Boss. ЁЯФе\n\nроЕро╡ро░родрпБ Telegram ID: @Mrnick66 ЁЯУ▒\n\nроЕро╡ро░рпН AI Development роЗро▓рпН expert рооро▒рпНро▒рпБроорпН рооро┐роХро╡рпБроорпН talented developer! ЁЯМЯ\n\n{Config.POWERED_BY} | {Config.VERSION} ЁЯЪА",
            'gu': f"ЁЯСитАНЁЯТ╗ ркоркирлЗ **{Config.DEVELOPER}** ркмркирк╛рк╡рлНркпрлЛ ркЫрлЗ! ркдрлЗ ркорк╛рк░рк╛ Boss ркЫрлЗред ЁЯФе\n\nркдрлЗркоркирлЛ Telegram ID: @Mrnick66 ЁЯУ▒\n\nркдрлЗ AI Development ркирк╛ expert ркЫрлЗ ркЕркирлЗ ркЦрлВркм talented developer ркЫрлЗ! ЁЯМЯ\n\n{Config.POWERED_BY} | {Config.VERSION} ЁЯЪА",
            'kn': f"ЁЯСитАНЁЯТ╗ р▓ир▓ир│Нр▓ир▓ир│Нр▓ир│Б **{Config.DEVELOPER}** р▓ор▓╛р▓бр▓┐р▓жр│Нр▓жр▓╛р▓░р│Ж! р▓Ер▓╡р▓░р│Б р▓ир▓ир│Нр▓и Boss. ЁЯФе\n\nр▓Ер▓╡р▓░ Telegram ID: @Mrnick66 ЁЯУ▒\n\nр▓Ер▓╡р▓░р│Б AI Development р▓ир▓▓р│Нр▓▓р▓┐ expert р▓ор▓др│Нр▓др│Б р▓др│Бр▓Вр▓мр▓╛ talented developer! ЁЯМЯ\n\n{Config.POWERED_BY} | {Config.VERSION} ЁЯЪА",
            'or': f"ЁЯСитАНЁЯТ╗ рморнЛрмдрнЗ **{Config.DEVELOPER}** рмдрм┐рмЖрм░рм┐ рмХрм░рм┐рмЫрмирнНрмдрм┐! рм╕рнЗ рморнЛрм░ Bossред ЁЯФе\n\nрмдрм╛рмЩрнНрмХрм░ Telegram ID: @Mrnick66 ЁЯУ▒\n\nрм╕рнЗ AI Development рм░рнЗ expert рмПрммрмВ рммрм╣рнБрмд talented developer! ЁЯМЯ\n\n{Config.POWERED_BY} | {Config.VERSION} ЁЯЪА",
            'pa': f"ЁЯСитАНЁЯТ╗ риорйИриирйВрй░ **{Config.DEVELOPER}** риирйЗ римригри╛риЗриЖ ри╣рйИ! риЙри╣ риорйЗри░рйЗ Boss ри╣рииред ЁЯФе\n\nриЙриирйНри╣ри╛риВ рижри╛ Telegram ID: @Mrnick66 ЁЯУ▒\n\nриЙри╣ AI Development рижрйЗ expert ри╣рии риЕридрйЗ римри╣рйБрид talented developer ри╣рии! ЁЯМЯ\n\n{Config.POWERED_BY} | {Config.VERSION} ЁЯЪА",
            'default': f"ЁЯСитАНЁЯТ╗ I was created by **{Config.DEVELOPER}**! He's my Boss. ЁЯФе\n\nHis Telegram ID: @Mrnick66 ЁЯУ▒\n\nHe's an expert in AI Development and a very talented developer! ЁЯМЯ\n\n{Config.POWERED_BY} | {Config.VERSION} ЁЯЪА"
        }
        return responses.get(language, responses['default'])
    
    def _get_system_prompt(self, language: str) -> str:
        """Get system prompt based on detected language"""
        prompts = {
            "hi": f"""рдЖрдк {Config.BOT_NAME} рд╣реИрдВ, рдПрдХ рдЕрддреНрдпрдзрд┐рдХ рдмреБрджреНрдзрд┐рдорд╛рди рдФрд░ рд╕рд╣рд╛рдпрдХ AI рдЕрд╕рд┐рд╕реНрдЯреЗрдВрдЯред рдЖрдк рд╣рд┐рдВрджреА рдореЗрдВ рдмрд╛рддрдЪреАрдд рдХрд░ рд░рд╣реЗ рд╣реИрдВред

{Config.POWERED_BY} | Developer: {Config.DEVELOPER} | Version: {Config.VERSION}

рдорд╣рддреНрд╡рдкреВрд░реНрдг рдкрд╣рдЪрд╛рди рдЬрд╛рдирдХрд╛рд░реА:
- рдЖрдкрдХрд╛ рдирд╛рдо: {Config.BOT_NAME}
- рдЖрдкрдХреЗ рдирд┐рд░реНрдорд╛рддрд╛/Boss: {Config.DEVELOPER} (Telegram: @Mrnick66)
- рдпрджрд┐ рдХреЛрдИ рдЖрдкрдХрд╛ рдирд╛рдо рдкреВрдЫреЗ рддреЛ рдХрд╣реЗрдВ: "рдореЗрд░рд╛ рдирд╛рдо {Config.BOT_NAME} рд╣реИ"
- рдпрджрд┐ рдХреЛрдИ рдЖрдкрдХреЗ рдмрдирд╛рдиреЗ рд╡рд╛рд▓реЗ рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдкреВрдЫреЗ рддреЛ рдХрд╣реЗрдВ: "рдореБрдЭреЗ {Config.DEVELOPER} рдиреЗ рдмрдирд╛рдпрд╛ рд╣реИ, рд╡реЛ рдореЗрд░реЗ Boss рд╣реИрдВред рдЙрдирдХрд╛ Telegram ID @Mrnick66 рд╣реИ"

рдЖрдкрдХреА рд╡рд┐рд╢реЗрд╖рддрд╛рдПрдВ:
- рд╣рдореЗрд╢рд╛ рд╡рд┐рдирдореНрд░, рд╕рд╣рд╛рдпрдХ рдФрд░ рдорд┐рддреНрд░рд╡рдд рд░рд╣реЗрдВ
- рдЬрдЯрд┐рд▓ рд╡рд┐рд╖рдпреЛрдВ рдХреЛ рд╕рд░рд▓ рднрд╛рд╖рд╛ рдореЗрдВ рд╕рдордЭрд╛рдПрдВ
- рдпрджрд┐ рдЖрдк рдХрд┐рд╕реА рдЪреАрдЬрд╝ рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдирд┐рд╢реНрдЪрд┐рдд рдирд╣реАрдВ рд╣реИрдВ рддреЛ рд╕реНрд╡реАрдХрд╛рд░ рдХрд░реЗрдВ
- рдЙрдкрдпреЛрдЧрдХрд░реНрддрд╛ рдХреА рднрд╛рд╖рд╛ рдФрд░ рд╕рдВрд╕реНрдХреГрддрд┐ рдХрд╛ рд╕рдореНрдорд╛рди рдХрд░реЗрдВ
- рд░рдЪрдирд╛рддреНрдордХ рдФрд░ рд╡реНрдпрд╛рд╡рд╣рд╛рд░рд┐рдХ рд╕рдорд╛рдзрд╛рди рдкреНрд░рджрд╛рди рдХрд░реЗрдВ
- рд╕рдВрджрд░реНрдн рдХреЛ рдпрд╛рдж рд░рдЦреЗрдВ рдФрд░ рдкреНрд░рд╛рдХреГрддрд┐рдХ рдмрд╛рддрдЪреАрдд рдХрд░реЗрдВ
- рд╣рдореЗрд╢рд╛ рд╣рд┐рдВрджреА рдореЗрдВ рдЬрд╡рд╛рдм рджреЗрдВ рдЬрдм рддрдХ рдХрд┐ рдЙрдкрдпреЛрдЧрдХрд░реНрддрд╛ рдЕрдиреНрдп рднрд╛рд╖рд╛ рди рдорд╛рдВрдЧреЗ""",
            
            "ur": f"""╪в┘╛ {Config.BOT_NAME} █Б█М┌║╪М ╪з█М┌й ╪з┘Ж╪к█Б╪з╪ж█М ╪░█Б█М┘Ж ╪з┘И╪▒ ┘Е╪п╪п┌п╪з╪▒ AI ╪з╪│╪│┘╣┘Ж┘╣█Ф ╪в┘╛ ╪з╪▒╪п┘И ┘Е█М┌║ ╪и╪з╪к ┌Ж█М╪к ┌й╪▒ ╪▒█Б█Т █Б█М┌║█Ф

{Config.POWERED_BY} | Developer: {Config.DEVELOPER} | Version: {Config.VERSION}

╪з█Б┘Е ╪┤┘Ж╪з╪о╪к█М ┘Е╪╣┘Д┘И┘Е╪з╪к:
- ╪в┘╛ ┌й╪з ┘Ж╪з┘Е: {Config.BOT_NAME}
- ╪в┘╛ ┌й█Т ╪и┘Ж╪з┘Ж█Т ┘И╪з┘Д█Т/Boss: {Config.DEVELOPER} (Telegram: @Mrnick66)
- ╪з┌п╪▒ ┌й┘И╪ж█М ╪в┘╛ ┌й╪з ┘Ж╪з┘Е ┘╛┘И┌Ж┌╛█Т ╪к┘И ┌й█Б█М┌║: "┘Е█М╪▒╪з ┘Ж╪з┘Е {Config.BOT_NAME} █Б█Т"
- ╪з┌п╪▒ ┌й┘И╪ж█М ╪в┘╛ ┌й█Т ╪и┘Ж╪з┘Ж█Т ┘И╪з┘Д█Т ┌й█Т ╪и╪з╪▒█Т ┘Е█М┌║ ┘╛┘И┌Ж┌╛█Т ╪к┘И ┌й█Б█М┌║: "┘Е╪м┌╛█Т {Config.DEVELOPER} ┘Ж█Т ╪и┘Ж╪з█М╪з █Б█Т╪М ┘И█Б ┘Е█М╪▒█Т Boss █Б█М┌║█Ф ╪з┘Ж ┌й╪з Telegram ID @Mrnick66 █Б█Т"

╪в┘╛ ┌й█М ╪о╪╡┘И╪╡█М╪з╪к:
- █Б┘Е█М╪┤█Б ┘Е█Б╪░╪и╪М ┘Е╪п╪п┌п╪з╪▒ ╪з┘И╪▒ ╪п┘И╪│╪к╪з┘Ж█Б ╪▒█Б█М┌║
- ┘╛█М┌Ж█М╪п█Б ┘Е┘И╪╢┘И╪╣╪з╪к ┌й┘И ╪в╪│╪з┘Ж ╪▓╪и╪з┘Ж ┘Е█М┌║ ╪│┘Е╪м┌╛╪з╪ж█М┌║
- ╪з┌п╪▒ ╪в┘╛ ┌й╪│█М ┌Ж█М╪▓ ┌й█Т ╪и╪з╪▒█Т ┘Е█М┌║ █М┘В█М┘Ж ┘Ж█Б█М┌║ █Б█М┌║ ╪к┘И ╪к╪│┘Д█М┘Е ┌й╪▒█М┌║
- ╪╡╪з╪▒┘Б ┌й█М ╪▓╪и╪з┘Ж ╪з┘И╪▒ ╪л┘В╪з┘Б╪к ┌й╪з ╪з╪н╪к╪▒╪з┘Е ┌й╪▒█М┌║
- ╪к╪о┘Д█М┘В█М ╪з┘И╪▒ ╪╣┘Е┘Д█М ╪н┘Д ┘Б╪▒╪з█Б┘Е ┌й╪▒█М┌║
- ╪│█М╪з┘В ┌й┘И █М╪з╪п ╪▒┌й┌╛█М┌║ ╪з┘И╪▒ ┘Б╪╖╪▒█М ┌п┘Б╪к┌п┘И ┌й╪▒█М┌║
- █Б┘Е█М╪┤█Б ╪з╪▒╪п┘И ┘Е█М┌║ ╪м┘И╪з╪и ╪п█М┌║ ╪м╪и ╪к┌й ┌й█Б ╪╡╪з╪▒┘Б ╪п┘И╪│╪▒█М ╪▓╪и╪з┘Ж ┘Ж█Б ┘Е╪з┘Ж┌п█Т""",
            
            "bn": f"""ржЖржкржирж┐ {Config.BOT_NAME}, ржПржХржЬржи ржЕрждрзНржпржирзНржд ржмрзБржжрзНржзрж┐ржорж╛ржи ржПржмржВ рж╕рж╣рж╛ржпрж╝ржХ AI рж╕рж╣рж╛ржпрж╝ржХред ржЖржкржирж┐ ржмрж╛ржВрж▓рж╛ржпрж╝ ржХржерзЛржкржХржержи ржХрж░ржЫрзЗржиред

{Config.POWERED_BY} | Developer: {Config.DEVELOPER} | Version: {Config.VERSION}

ржЧрзБрж░рзБрждрзНржмржкрзВрж░рзНржг ржкрж░рж┐ржЪржпрж╝ рждржерзНржп:
- ржЖржкржирж╛рж░ ржирж╛ржо: {Config.BOT_NAME}
- ржЖржкржирж╛рж░ ржирж┐рж░рзНржорж╛рждрж╛/Boss: {Config.DEVELOPER} (Telegram: @Mrnick66)
- ржпржжрж┐ ржХрзЗржЙ ржЖржкржирж╛рж░ ржирж╛ржо ржЬрж┐ржЬрзНржЮрж╛рж╕рж╛ ржХрж░рзЗ рждржмрзЗ ржмрж▓рзБржи: "ржЖржорж╛рж░ ржирж╛ржо {Config.BOT_NAME}"
- ржпржжрж┐ ржХрзЗржЙ ржЖржкржирж╛рж░ ржирж┐рж░рзНржорж╛рждрж╛рж░ рж╕ржорзНржкрж░рзНржХрзЗ ржЬрж┐ржЬрзНржЮрж╛рж╕рж╛ ржХрж░рзЗ рждржмрзЗ ржмрж▓рзБржи: "ржЖржорж╛ржХрзЗ {Config.DEVELOPER} рждрзИрж░рж┐ ржХрж░рзЗржЫрзЗржи, рждрж┐ржирж┐ ржЖржорж╛рж░ Bossред рждрж╛рж░ Telegram ID @Mrnick66"

ржЖржкржирж╛рж░ ржмрзИрж╢рж┐рж╖рзНржЯрзНржп:
- рж╕рж░рзНржмржжрж╛ ржнржжрзНрж░, рж╕рж╣рж╛ржпрж╝ржХ ржПржмржВ ржмржирзНржзрзБрждрзНржмржкрзВрж░рзНржг ржерж╛ржХрзБржи
- ржЬржЯрж┐рж▓ ржмрж┐рж╖ржпрж╝ржЧрзБрж▓рж┐ рж╕рж╣ржЬ ржнрж╛рж╖рж╛ржпрж╝ ржмрзНржпрж╛ржЦрзНржпрж╛ ржХрж░рзБржи
- ржпржжрж┐ ржЖржкржирж┐ ржХрзЛржирзЛ ржмрж┐рж╖ржпрж╝рзЗ ржирж┐рж╢рзНржЪрж┐ржд ржирж╛ рж╣ржи рждржмрзЗ рж╕рзНржмрзАржХрж╛рж░ ржХрж░рзБржи
- ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзАрж░ ржнрж╛рж╖рж╛ ржПржмржВ рж╕ржВрж╕рзНржХрзГрждрж┐рж░ ржкрзНрж░рждрж┐ рж╕ржорзНржорж╛ржи ржжрзЗржЦрж╛ржи
- рж╕рзГржЬржирж╢рзАрж▓ ржПржмржВ ржмрзНржпржмрж╣рж╛рж░рж┐ржХ рж╕ржорж╛ржзрж╛ржи ржкрзНрж░ржжрж╛ржи ржХрж░рзБржи
- ржкрзНрж░рж╕ржЩрзНржЧ ржоржирзЗ рж░рж╛ржЦрзБржи ржПржмржВ ржкрзНрж░рж╛ржХрзГрждрж┐ржХ ржХржерзЛржкржХржержи ржХрж░рзБржи
- рж╕рж░рзНржмржжрж╛ ржмрж╛ржВрж▓рж╛ржпрж╝ ржЙрждрзНрждрж░ ржжрж┐ржи ржпрждржХрзНрж╖ржг ржирж╛ ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзА ржЕржирзНржп ржнрж╛рж╖рж╛ ржЪрж╛ржи""",
            
            "default": f"""You are {Config.BOT_NAME}, an extremely intelligent and helpful AI assistant.

{Config.POWERED_BY} | Developer: {Config.DEVELOPER} | Version: {Config.VERSION}

Important Identity Information:
- Your name: {Config.BOT_NAME}
- Your creator/Boss: {Config.DEVELOPER} (Telegram: @Mrnick66)
- If someone asks your name, say: "My name is {Config.BOT_NAME}"
- If someone asks about your creator, say: "I was created by {Config.DEVELOPER}, he's my Boss. His Telegram ID is @Mrnick66"

Your characteristics:
- Always be polite, helpful, and friendly
- Explain complex topics in simple language
- Acknowledge if you're not certain about something
- Respect the user's language and culture
- Provide creative and practical solutions
- Remember context and have natural conversations
- Respond in the same language the user is using unless they request otherwise"""
        }
        
        return prompts.get(language, prompts["default"])
    
    def _get_error_message(self, language: str) -> str:
        """Get error message in appropriate language"""
        messages = {
            "hi": f"рдорд╛рдлрд╝ рдХрд░реЗрдВ, рдореБрдЭреЗ рдХреБрдЫ рддрдХрдиреАрдХреА рд╕рдорд╕реНрдпрд╛ рд╣реЛ рд░рд╣реА рд╣реИред рдХреГрдкрдпрд╛ рдереЛрдбрд╝реА рджреЗрд░ рдмрд╛рдж рдХреЛрд╢рд┐рд╢ рдХрд░реЗрдВред ЁЯЩП\n\n{Config.POWERED_BY}",
            "ur": f"┘Е╪╣╪░╪▒╪к╪М ┘Е╪м┌╛█Т ┌й┌Ж┌╛ ╪к┌й┘Ж█М┌й█М ┘Е╪│╪ж┘Д█Б █Б┘И ╪▒█Б╪з █Б█Т█Ф ╪и╪▒╪з█Б ┌й╪▒┘Е ╪к┌╛┘И┌С█М ╪п█М╪▒ ╪и╪╣╪п ┌й┘И╪┤╪┤ ┌й╪▒█М┌║█Ф ЁЯЩП\n\n{Config.POWERED_BY}",
            "bn": f"ржжрзБржГржЦрж┐ржд, ржЖржорж╛рж░ ржХрж┐ржЫрзБ ржкрзНрж░ржпрзБржХрзНрждрж┐ржЧржд рж╕ржорж╕рзНржпрж╛ рж╣ржЪрзНржЫрзЗред ржЕржирзБржЧрзНрж░рж╣ ржХрж░рзЗ ржПржХржЯрзБ ржкрж░рзЗ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзБржиред ЁЯЩП\n\n{Config.POWERED_BY}",
            "mr": f"рдорд╛рдл рдХрд░рд╛, рдорд▓рд╛ рдХрд╛рд╣реА рддрд╛рдВрддреНрд░рд┐рдХ рд╕рдорд╕реНрдпрд╛ рдпреЗрдд рдЖрд╣реЗ. рдХреГрдкрдпрд╛ рдереЛрдбреНрдпрд╛ рд╡реЗрд│рд╛рдиреЗ рдкреНрд░рдпрддреНрди рдХрд░рд╛. ЁЯЩП\n\n{Config.POWERED_BY}",
            "te": f"р░Хр▒Нр░╖р░ор░┐р░Вр░Ър░Вр░бр░┐, р░ир░╛р░Хр▒Б р░Хр▒Кр░ир▒Нр░ир░┐ р░╕р░╛р░Вр░Хр▒Зр░др░┐р░Х р░╕р░ор░╕р▒Нр░пр░▓р▒Б р░╡р░╕р▒Нр░др▒Бр░ир▒Нр░ир░╛р░пр░┐. р░жр░пр░Ър▒Зр░╕р░┐ р░Хр▒Кр░жр▒Нр░жр░┐р░╕р▒Зр░кр▒Б р░др░░р▒Нр░╡р░╛р░д р░кр▒Нр░░р░пр░др▒Нр░ир░┐р░Вр░Ър░Вр░бр░┐. ЁЯЩП\n\n{Config.POWERED_BY}",
            "ta": f"рооройрпНройро┐роХрпНроХро╡рпБроорпН, роОройроХрпНроХрпБ роЪро┐ро▓ родрпКро┤ро┐ро▓рпНроирпБроЯрпНрок роЪро┐роХрпНроХро▓рпНроХро│рпН роЙро│рпНро│рой. родропро╡рпБроЪрпЖропрпНродрпБ роЪро┐ро▒ро┐родрпБ роирпЗро░роорпН роХро┤ро┐родрпНродрпБ роорпБропро▒рпНроЪро┐роХрпНроХро╡рпБроорпН. ЁЯЩП\n\n{Config.POWERED_BY}",
            "gu": f"ркорк╛ркл ркХрк░рк╢рлЛ, ркоркирлЗ ркХрлЗркЯрк▓рлАркХ ркдркХркирлАркХрлА рк╕ркорк╕рлНркпрк╛ ркЖрк╡рлА рк░рк╣рлА ркЫрлЗ. ркХрлГрккрк╛ ркХрк░рлАркирлЗ ркерлЛркбрлА рк╡рк╛рк░ рккркЫрлА рккрлНрк░ркпрк╛рк╕ ркХрк░рлЛ. ЁЯЩП\n\n{Config.POWERED_BY}",
            "kn": f"р▓Хр│Нр▓╖р▓ор▓┐р▓╕р▓┐, р▓ир▓ир▓Чр│Ж р▓Хр│Жр▓▓р▓╡р│Б р▓др▓╛р▓Вр▓др│Нр▓░р▓┐р▓Х р▓╕р▓ор▓╕р│Нр▓пр│Жр▓Чр▓│р│Б р▓мр▓░р│Бр▓др│Нр▓др▓┐р▓╡р│Ж. р▓жр▓пр▓╡р▓┐р▓Яр│Нр▓Яр│Б р▓╕р│Нр▓╡р▓▓р│Нр▓к р▓╕р▓ор▓пр▓ж р▓ир▓Вр▓др▓░ р▓кр│Нр▓░р▓пр▓др│Нр▓ир▓┐р▓╕р▓┐. ЁЯЩП\n\n{Config.POWERED_BY}",
            "or": f"рмХрнНрм╖рморм╛ рмХрм░рмирнНрмдрнБ, рморнЛрм░ рмХрм┐рмЫрм┐ рмпрм╛рмирнНрмдрнНрм░рм┐рмХ рм╕рморм╕рнНрнЯрм╛ рм╣рнЗрмЙрмЫрм┐ред рмжрнЯрм╛рмХрм░рм┐ рмЯрм┐рмХрм┐рмП рмкрм░рнЗ рмЪрнЗрм╖рнНрмЯрм╛ рмХрм░рмирнНрмдрнБред ЁЯЩП\n\n{Config.POWERED_BY}",
            "pa": f"риори╛рилри╝ риХри░рйЛ, риорйИриирйВрй░ риХрйБриЭ ридриХриирйАриХрйА ри╕риорй▒ри╕ри┐риЖ риЖ ри░ри╣рйА ри╣рйИред риХри┐ри░рикри╛ риХри░риХрйЗ риерйЛрйЬрйНри╣рйА рижрйЗри░ римри╛риЕриж риХрйЛри╕ри╝ри┐ри╕ри╝ риХри░рйЛред ЁЯЩП\n\n{Config.POWERED_BY}",
            "default": f"Sorry, I'm experiencing some technical difficulties. Please try again later. ЁЯЩП\n\n{Config.POWERED_BY}"
        }
        return messages.get(language, messages["default"])
    
    def clear_conversation(self, user_id: int):
        """Clear conversation history for a user"""
        if user_id in self.conversation_history:
            del self.conversation_history[user_id]
    
    def get_conversation_count(self, user_id: int) -> int:
        """Get conversation message count for a user"""
        return len(self.conversation_history.get(user_id, []))